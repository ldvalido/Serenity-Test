
namespace Cidob.MasterData.Entities
{
    using Newtonsoft.Json;
    using Serenity;
    using Serenity.ComponentModel;
    using Serenity.Data;
    using Serenity.Data.Mapping;
    using System;
    using System.ComponentModel;
    using System.IO;

    [ConnectionKey("Default"), DisplayName("Base"), InstanceName("Base"), TwoLevelCached]
    [ReadPermission("MasterData:Base")]
    [ModifyPermission("MasterData:Base")]
    public sealed class BaseRow : Row, IIdRow, INameRow
    {
        [DisplayName("Id Base"), Identity]
        public Int32? IdBase
        {
            get { return Fields.IdBase[this]; }
            set { Fields.IdBase[this] = value; }
        }

        [DisplayName("Id Product"), NotNull, ForeignKey("[dbo].[Product]", "IdProduct"), LeftJoin("jIdProduct"), TextualField("IdProductDescription")]
        public Int32? IdProduct
        {
            get { return Fields.IdProduct[this]; }
            set { Fields.IdProduct[this] = value; }
        }

        [DisplayName("Order")]
        public Int32? Order
        {
            get { return Fields.Order[this]; }
            set { Fields.Order[this] = value; }
        }

        [DisplayName("Description"), Size(50), NotNull, QuickSearch]
        public String Description
        {
            get { return Fields.Description[this]; }
            set { Fields.Description[this] = value; }
        }

        [DisplayName("Print Name"), Size(50), NotNull]
        public String PrintName
        {
            get { return Fields.PrintName[this]; }
            set { Fields.PrintName[this] = value; }
        }

        [DisplayName("From"), NotNull]
        public Int32? From
        {
            get { return Fields.From[this]; }
            set { Fields.From[this] = value; }
        }

        [DisplayName("To"), NotNull]
        public Int32? To
        {
            get { return Fields.To[this]; }
            set { Fields.To[this] = value; }
        }

        [DisplayName("Escatola"), NotNull]
        public Boolean? Escatola
        {
            get { return Fields.Escatola[this]; }
            set { Fields.Escatola[this] = value; }
        }

        [DisplayName("Need Arch"), NotNull]
        public Boolean? NeedArch
        {
            get { return Fields.NeedArch[this]; }
            set { Fields.NeedArch[this] = value; }
        }

        [DisplayName("Need Transversal Arch"), NotNull]
        public Boolean? NeedTransversalArch
        {
            get { return Fields.NeedTransversalArch[this]; }
            set { Fields.NeedTransversalArch[this] = value; }
        }

        [DisplayName("Id Product Description"), Expression("jIdProduct.[Description]")]
        public String IdProductDescription
        {
            get { return Fields.IdProductDescription[this]; }
            set { Fields.IdProductDescription[this] = value; }
        }

        [DisplayName("Id Product Code"), Expression("jIdProduct.[Code]")]
        public String IdProductCode
        {
            get { return Fields.IdProductCode[this]; }
            set { Fields.IdProductCode[this] = value; }
        }

        IIdField IIdRow.IdField
        {
            get { return Fields.IdBase; }
        }

        StringField INameRow.NameField
        {
            get { return Fields.Description; }
        }

        public static readonly RowFields Fields = new RowFields().Init();

        public BaseRow()
            : base(Fields)
        {
        }

        public class RowFields : RowFieldsBase
        {
            public Int32Field IdBase;
            public Int32Field IdProduct;
            public Int32Field Order;
            public StringField Description;
            public StringField PrintName;
            public Int32Field From;
            public Int32Field To;
            public BooleanField Escatola;
            public BooleanField NeedArch;
            public BooleanField NeedTransversalArch;

            public StringField IdProductDescription;
            public StringField IdProductCode;

            public RowFields()
                : base("[dbo].[Base]")
            {
                LocalTextPrefix = "MasterData.Base";
            }
        }
    }
}
