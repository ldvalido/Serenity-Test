
using System.ComponentModel.DataAnnotations;

namespace Cidob.Configuration.Entities
{
    using Newtonsoft.Json;
    using Serenity;
    using Serenity.ComponentModel;
    using Serenity.Data;
    using Serenity.Data.Mapping;
    using System;
    using System.ComponentModel;
    using System.IO;
    using Cidob.Administration.Entities;

    [ConnectionKey("Default"), DisplayName("UserPrefix"), InstanceName("UserPrefix"), TwoLevelCached]
    [ReadPermission("Configuration:UserPrefix:Read")]
    [InsertPermission("Configuration:UserPrefix:Insert")]
    [UpdatePermission("Configuration:UserPrefix:Update")]
    [DeletePermission("Configuration:UserPrefix:Delete")]
    [LookupScript("Configuration.UserPrefixRow")]
    public sealed class UserPrefixRow : Row, IIdRow, INameRow
    {        
            #region Id User Prefix
            [DisplayName("Id User Prefix"), PrimaryKey, ForeignKey("[dbo].[Users]", "UserId"), LeftJoin("jIdUserPrefix"), TextualField("IdUserPrefixUsername")]
            [LookupEditor(typeof(UserRow), InplaceAdd = false)]
            public Int32? IdUserPrefix { get { return Fields.IdUserPrefix[this]; } set { Fields.IdUserPrefix[this] = value; } }
            public partial class RowFields { public Int32Field IdUserPrefix; }
            #endregion IdUserPrefix
                
            #region Id User
            [DisplayName("Id User"), NotNull]
            public Int32? IdUser { get { return Fields.IdUser[this]; } set { Fields.IdUser[this] = value; } }
            public partial class RowFields { public Int32Field IdUser; }
            #endregion IdUser
                
            #region Prefix
            [DisplayName("Prefix"), NotNull, QuickSearch,Size(3)]
            public String Prefix { get { return Fields.Prefix[this]; } set { Fields.Prefix[this] = value; } }
            public partial class RowFields { public StringField Prefix; }
            #endregion Prefix
        

    #region Foreign Fields
            
                [DisplayName("Id User Prefix Username"), Expression("jIdUserPrefix.[Username]")]
                public String IdUserPrefixUsername { get { return Fields.IdUserPrefixUsername[this]; } set { Fields.IdUserPrefixUsername[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixUsername; }

                        
                [DisplayName("Id User Prefix Display Name"), Expression("jIdUserPrefix.[DisplayName]")]
                public String IdUserPrefixDisplayName { get { return Fields.IdUserPrefixDisplayName[this]; } set { Fields.IdUserPrefixDisplayName[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixDisplayName; }

                        
                [DisplayName("Id User Prefix Email"), Expression("jIdUserPrefix.[Email]")]
                public String IdUserPrefixEmail { get { return Fields.IdUserPrefixEmail[this]; } set { Fields.IdUserPrefixEmail[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixEmail; }

                        
                [DisplayName("Id User Prefix Source"), Expression("jIdUserPrefix.[Source]")]
                public String IdUserPrefixSource { get { return Fields.IdUserPrefixSource[this]; } set { Fields.IdUserPrefixSource[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixSource; }

                        
                [DisplayName("Id User Prefix Password Hash"), Expression("jIdUserPrefix.[PasswordHash]")]
                public String IdUserPrefixPasswordHash { get { return Fields.IdUserPrefixPasswordHash[this]; } set { Fields.IdUserPrefixPasswordHash[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixPasswordHash; }

                        
                [DisplayName("Id User Prefix Password Salt"), Expression("jIdUserPrefix.[PasswordSalt]")]
                public String IdUserPrefixPasswordSalt { get { return Fields.IdUserPrefixPasswordSalt[this]; } set { Fields.IdUserPrefixPasswordSalt[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixPasswordSalt; }

                        
                [DisplayName("Id User Prefix Last Directory Update"), Expression("jIdUserPrefix.[LastDirectoryUpdate]")]
                public DateTime? IdUserPrefixLastDirectoryUpdate { get { return Fields.IdUserPrefixLastDirectoryUpdate[this]; } set { Fields.IdUserPrefixLastDirectoryUpdate[this] = value; } }
                public partial class RowFields { public DateTimeField IdUserPrefixLastDirectoryUpdate; }

                        
                [DisplayName("Id User Prefix User Image"), Expression("jIdUserPrefix.[UserImage]")]
                public String IdUserPrefixUserImage { get { return Fields.IdUserPrefixUserImage[this]; } set { Fields.IdUserPrefixUserImage[this] = value; } }
                public partial class RowFields { public StringField IdUserPrefixUserImage; }

                        
                [DisplayName("Id User Prefix Insert Date"), Expression("jIdUserPrefix.[InsertDate]")]
                public DateTime? IdUserPrefixInsertDate { get { return Fields.IdUserPrefixInsertDate[this]; } set { Fields.IdUserPrefixInsertDate[this] = value; } }
                public partial class RowFields { public DateTimeField IdUserPrefixInsertDate; }

                        
                [DisplayName("Id User Prefix Insert User Id"), Expression("jIdUserPrefix.[InsertUserId]")]
                public Int32? IdUserPrefixInsertUserId { get { return Fields.IdUserPrefixInsertUserId[this]; } set { Fields.IdUserPrefixInsertUserId[this] = value; } }
                public partial class RowFields { public Int32Field IdUserPrefixInsertUserId; }

                        
                [DisplayName("Id User Prefix Update Date"), Expression("jIdUserPrefix.[UpdateDate]")]
                public DateTime? IdUserPrefixUpdateDate { get { return Fields.IdUserPrefixUpdateDate[this]; } set { Fields.IdUserPrefixUpdateDate[this] = value; } }
                public partial class RowFields { public DateTimeField IdUserPrefixUpdateDate; }

                        
                [DisplayName("Id User Prefix Update User Id"), Expression("jIdUserPrefix.[UpdateUserId]")]
                public Int32? IdUserPrefixUpdateUserId { get { return Fields.IdUserPrefixUpdateUserId[this]; } set { Fields.IdUserPrefixUpdateUserId[this] = value; } }
                public partial class RowFields { public Int32Field IdUserPrefixUpdateUserId; }

                        
                [DisplayName("Id User Prefix Is Active"), Expression("jIdUserPrefix.[IsActive]")]
                public Int16? IdUserPrefixIsActive { get { return Fields.IdUserPrefixIsActive[this]; } set { Fields.IdUserPrefixIsActive[this] = value; } }
                public partial class RowFields { public Int16Field IdUserPrefixIsActive; }

            
    #endregion Foreign Fields

    #region Id and Name fields
    IIdField IIdRow.IdField
    {
    get { return Fields.IdUserPrefix; }
    }
        
            StringField INameRow.NameField
            {
            get { return Fields.Prefix; }
            }
            #endregion Id and Name fields

    #region Constructor
    public UserPrefixRow()
    : base(Fields)
    {
    }
    #endregion Constructor

    #region RowFields
    public static readonly RowFields Fields = new RowFields().Init();

    public partial class RowFields : RowFieldsBase
    {
    public RowFields()
    : base("[dbo].[UserPrefix]")
    {
    LocalTextPrefix = "Configuration.UserPrefix";
    }
    }
    #endregion RowFields
    }
    }
